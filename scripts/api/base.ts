// tslint:disable
/**
 * Cakemix Server API
 * Definition of Cakemix Server API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@wonder-wonder.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from "./configuration";
// Some imports not used depending on template conditions
// @ts-ignore
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';

const HTTP_SCHEME = process.env.HTTP_SCHEME !== undefined && process.env.API_BASE_PATH !== "" ? process.env.HTTP_SCHEME : location.protocol === "http:" ? "http" : "https"
const WS_SCHEME = process.env.WS_SCHEME !== undefined && process.env.WS_SCHEME !== "" ? process.env.WS_SCHEME : location.protocol === "http:" ? "ws" : "wss"
export const DOMAIN = process.env.DOMAIN !== undefined && process.env.DOMAIN !== "" ? process.env.DOMAIN : process.env.NODE_ENV === "development" ? "localhost:8081" : location.host
export const WEB_BASE_URL = `${HTTP_SCHEME}://${DOMAIN}`;
const API_BASE_PATH = process.env.API_BASE_PATH !== undefined ? process.env.API_BASE_PATH : "/v1"
export const WS_BASE_URL = `${WS_SCHEME}://${DOMAIN}${API_BASE_PATH}`;
export const API_BASE_URL = `${HTTP_SCHEME}://${DOMAIN}${API_BASE_PATH}`;

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface RequestArgs
 */
export interface RequestArgs {
    url: string;
    options: any;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration | undefined;

    constructor(configuration?: Configuration, protected basePath: string = API_BASE_URL, protected axios: AxiosInstance = globalAxios) {
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
};

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
    name: "RequiredError" = "RequiredError";
    constructor(public field: string, msg?: string) {
        super(msg);
    }
}
